"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import json
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/
TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')
STATIC_URL = '/static/'
# BASEDIR 는 Config 이다
# os.path.dirname()은 한단계 위로 올라간다고 생각하면 된다.
ROOT_DIR = os.path.dirname(BASE_DIR)
# ROOT_ROOT_DIR = os.path.dirname(ROOT_DIR)
# print('베이스 경로는: ', BASE_DIR)
# print('루트경로는 : ', ROOT_DIR)
# print('루트루트 경로는 : ', ROOT_ROOT_DIR)
# instagram/.media/
MEDIA_ROOT = os.path.join(ROOT_DIR, '.media')
MEDIA_URL = '/media/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

# HTTPSCHEME + HOST + /Media/ + File주소

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '9%65x8cg!9u2q)^#x++wg(d1usjjt!1imxbu_gj-e#e@&*!u7w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '172.16.1.116',
    '13.209.65.54'
]
AUTH_USER_MODEL = 'members.User'

JSON_FILE = os.path.join(ROOT_DIR, 'secrets.json')
print('제이슨 파일: ', JSON_FILE)
JSON_DATA = open(JSON_FILE)
print('제이슨 데이터:', JSON_DATA)
print('제이슽 데이터 타입 :', type(JSON_DATA))
JSON_DATA_OBJECT = json.load(JSON_DATA)  # 딕셔너리형 데이터를 가지고 온다
JSON_DATA_STRING = json.dumps(JSON_DATA_OBJECT)  # 문자열 형 데이터를 가지고 온다
# JSON_DATA_STRING = JSON_DATA.dumps(JSON_FILE)

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
AWS_ACCESS_KEY_ID = f"{JSON_DATA_OBJECT['AWS_ACCESS_KEY_ID']}"
AWS_SECRET_ACCESS_KEY = f"{JSON_DATA_OBJECT['AWS_SECRET_ACCESS_KEY']}"
AWS_STORAGE_BUCKET_NAME = "wps-instagram-ldh2"
AWS_AUTO_CREATE_BUCKET = True
AWS_S3_REGION_NAME = "ap-northeast-2"

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'members.apps.MembersConfig',
    'posts.apps.PostsConfig',
    'django_extensions',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'instagram',
        'USER': f"{JSON_DATA_OBJECT['POSTGRESQL_USER']}",
        'PASSWORD': f"{JSON_DATA_OBJECT['POSTGRESQL_PASSWORD']}",
        'HOST': 'wps12th-ldh.cninfzt6utzi.ap-northeast-2.rds.amazonaws.com',
        'PORT': 5432
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
